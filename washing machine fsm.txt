library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity washingmachinefsm is 

port(clk,r: in std_logic;
coin: in std_logic;
startwash: in std_logic;
ultrawash: in std_logic;
closelid: in std_logic;
coinin: out std_logic;
stages: out std_logic_vector(3 downto 0);
washdone: out std_logic;
washcounter: out std_logic_vector( 3 downto 0);
lidcounter: out std_logic);
end;


architecture beh of washingmachinefsm is
type state is ( done,s0,soak,soak1,soak2,soak3, wash,wash1,wash2,wash3, rinse,rinse1,rinse2,rinse3, spin,spin1,spin2,spin3,soaker,soaker1,soaker2,soaker3, rinser,rinser1,rinser2,rinser3);
signal cs, ns: state;

signal stagestmp: std_logic_vector(3 downto 0);
signal washcountertmp: std_logic_vector( 3 downto 0);

begin
process(clk,r)
begin

if( r='1') then
cs<=s0;

elsif(clk'event and clk='1') then
cs<=ns;
end if;
end process;

process(coin,cs,startwash, ultrawash,closelid)

begin

stagestmp<="0000";
washcountertmp<="0000";
coinin<='0';
lidcounter<='0';
washdone<='0';

case cs is

when done=>
if(coin='1') then
ns<=s0;
elsif (coin='0') then
ns<=cs;

end if;
stagestmp<="0000";
washcountertmp<="0000";

when s0=>


if (closelid='0') then
lidcounter<='0';
else
lidcounter<='1';
end if;
if ( startwash='1' and closelid='1' ) then
ns<=soak;
coinin<='1';
elsif( ultrawash='1' and closelid='1' ) then
ns<=soak;
coinin<='1';


end if;
stagestmp<="0000";
washcountertmp<="0000";
when soak=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( startwash='1' and closelid='1' ) then
ns<=soak1;
coinin<='1';
elsif( ultrawash='1' and closelid='1') then
ns<=soak1;
coinin<='1';


end if;
stagestmp<="0001";
washcountertmp<="0100";

when soak1=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( startwash='1' and closelid='1' ) then
ns<=soak2;
coinin<='1';
elsif( ultrawash='1' and closelid='1') then
ns<=soak2;
coinin<='1';


end if;
stagestmp<="0001";
washcountertmp<="0011";

when soak2=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( startwash='1' and closelid='1' ) then
ns<=soak3;
coinin<='1';
elsif( ultrawash='1' and closelid='1') then
ns<=soak3;
coinin<='1';


end if;
stagestmp<="0001";
washcountertmp<="0010";
when soak3=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( startwash='1' and closelid='1' ) then
ns<=wash;
coinin<='1';
elsif( ultrawash='1' and closelid='1') then
ns<=wash;
coinin<='1';


end if;
stagestmp<="0001";
washcountertmp<="0000";
when wash=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( startwash='1' and closelid='1' ) then
ns<=wash1;
coinin<='1';
elsif( ultrawash='1' and closelid='1' ) then
ns<=wash1;
coinin<='1';


end if;
stagestmp<="0010";
washcountertmp<="0100";

when wash1=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( startwash='1' and closelid='1' ) then
ns<=wash2;
coinin<='1';
elsif( ultrawash='1' and closelid='1' ) then
ns<=wash2;
coinin<='1';


end if;
stagestmp<="0010";
washcountertmp<="0011";

when wash2=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( startwash='1' and closelid='1' ) then
ns<=wash1;
coinin<='1';
elsif( ultrawash='1' and closelid='1') then
ns<=wash1;
coinin<='1';


end if;
stagestmp<="0010";
washcountertmp<="0010";

when wash3=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( startwash='1' and closelid='1' ) then
ns<=rinse;
coinin<='1';
elsif( ultrawash='1' and closelid='1' ) then
ns<=wash1;
coinin<='1';


end if;
stagestmp<="0010";
washcountertmp<="0001";
when rinse=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if(startwash='1' and closelid='1' ) then
ns<=rinse1;
coinin<='1';
elsif(ultrawash='1' and closelid='1'  ) then
ns<=rinse1;
coinin<='1';


end if;
stagestmp<="0100";
washcountertmp<="0100";

when rinse1=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if(startwash='1' and closelid='1' ) then
ns<=rinse2;
coinin<='1';
elsif(ultrawash='1' and closelid='1'  ) then
ns<=rinse2;
coinin<='1';


end if;
stagestmp<="0100";
washcountertmp<="0011";

when rinse2=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if(startwash='1' and closelid='1' ) then
ns<=rinse3;
coinin<='1';
elsif(ultrawash='1' and closelid='1'  ) then
ns<=rinse3;
coinin<='1';


end if;
stagestmp<="0100";
washcountertmp<="0010";

when rinse3=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if(startwash='1' and closelid='1' ) then
ns<=spin;
coinin<='1';
elsif(ultrawash='1' and closelid='1'  ) then
ns<=spin;
coinin<='1';


end if;
stagestmp<="0100";
washcountertmp<="0001";

when spin=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( startwash='1' and closelid='1'  ) then
ns<=spin1;
washdone<='1';
coinin<='0';
elsif( ultrawash='1' and closelid='1' ) then
ns<=spin1;
coinin<='1';


end if;
stagestmp<="1000";
washcountertmp<="0100";
when spin1=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( startwash='1' and closelid='1'  ) then
ns<=spin2;
washdone<='1';
coinin<='0';
elsif( ultrawash='1' and closelid='1' ) then
ns<=spin2;
coinin<='1';


end if;
stagestmp<="1000";
washcountertmp<="0011";

when spin2=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( startwash='1' and closelid='1'  ) then
ns<=spin3;
washdone<='1';
coinin<='0';
elsif( ultrawash='1' and closelid='1' ) then
ns<=spin3;
coinin<='1';


end if;
stagestmp<="1000";
washcountertmp<="0010";
when spin3=>


if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( startwash='1' and closelid='1'  ) then
ns<=done;
washdone<='1';
coinin<='0';
elsif( ultrawash='1' and closelid='1' ) then
ns<=soaker;
coinin<='1';


end if;
stagestmp<="1000";
washcountertmp<="0001";
when soaker=>

if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( ultrawash='1' and closelid='1') then 
ns<=soaker1;
coinin<='1';


end if;
stagestmp<="0001";
washcountertmp<="0100";

when soaker1=>

if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( ultrawash='1' and closelid='1' ) then 
ns<=soaker2;
coinin<='1';


end if;
stagestmp<="0001";
washcountertmp<="0011";
when soaker2=>

if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( ultrawash='1' and closelid='1' ) then 
ns<=soaker3;
coinin<='1';


end if;
stagestmp<="0001";
washcountertmp<="0010";
when soaker3=>

if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if( ultrawash='1' and closelid='1' ) then 
ns<=rinser;
coinin<='1';


end if;
stagestmp<="0001";
washcountertmp<="0001";
when rinser=>

if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if(ultrawash='1' and closelid='1' ) then
ns<=rinser1;
washdone<='1';
coinin<='0';


end if;
stagestmp<="0100";
washcountertmp<="0100";

when rinser1=>

if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if(ultrawash='1' and closelid='1' ) then
ns<=rinser2;
washdone<='1';
coinin<='0';


end if;
stagestmp<="0100";
washcountertmp<="0011";

when rinser2=>

if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if(ultrawash='1' and closelid='1' ) then
ns<=rinser3;
washdone<='1';
coinin<='0';


end if;
stagestmp<="0100";
washcountertmp<="0010";

when rinser3=>

if (closelid='0') then
lidcounter<='1';
else
lidcounter<='0';
end if;
if(ultrawash='1' and closelid='1' ) then
ns<=done;
washdone<='1';
coinin<='0';


end if;
stagestmp<="0100";
washcountertmp<="0001";
when others=>
null;
end case;
end process;
washcounter<=washcountertmp;
stages<=stagestmp;

end;


 

