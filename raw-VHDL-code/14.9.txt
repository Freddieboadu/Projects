library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;
--Traffic Light in problem 14.9
entity TL2 is
	port(r, clk, cew: in std_logic;--(clock, reset, carsensornorthsouth/carsensoreastwest)
			
light : out std_logic_vector(2 downto 0)); --codes for lights (nsg, nsy, nsr, ewg, ewy, ewr)
end; 

architecture beh of TL2 is 
	type state is (nsg, nsy, nsr, ewg, ewy, ewr);--directions
	signal cs, ns :state;--current state, next state
	
	begin
		process(r,clk)
		begin
			if(r = '1') then --reset
				cs<=nsg;--to the original state 
			elsif(clk'event AND clk = '1') then
					cs<= ns; 
				end if;
		end process;
		process(cs,cew)
		begin
		case cs is
			when nsg => 
				if(cew = '1' ) then--if a car is detected
					ns <= nsy;--next light in the sequence
				else

					ns <= nsg;-- stay light at the current light
				end if; 
				light<= "000";
			when nsy =>--auto transition so input doesnt matter 
				ns<=nsr;
				light<= "001";				
			when nsr =>--auto transition so input doesnt matter 
				ns<= ewg;
				light<= "010";
			when ewg =>
			if(cew = '0') then-- if a car is detected
					ns <= ewy;--next light needed
			else
					ns <= ewg;-- stay at the same light
				end if; 
			light<= "011";
			when ewy =>--auto transition so input doesnt matter 
				ns<= ewr;
				light<= "100";
			when ewr =>--auto transition so input doesnt matter 
				ns<= nsg;
				light<= "101";
		end case;		
		end process;
end beh;
