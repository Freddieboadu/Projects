
--moore for 1001
library ieee;

use ieee.std_logic_1164.all;

use ieee.std_logic_unsigned.all;

use ieee.numeric_std.all;  

entity moorefourbit is
Port ( clk : in STD_LOGIC;
input : in STD_LOGIC;
reset : in STD_LOGIC;
output : out STD_LOGIC);
end moorefourbit;
 
architecture Behavioral of moorefourbit is
type state is (s0, s1, s2, s3, s4);
signal ps, ns : state;
begin
 
synchronous_process: process (clk)
begin
if rising_edge(clk) then
if (reset = '1') then
ps <= s0;
else
ps <= ns;
end if;
end if;
end process;
 
output_decoder : process(ps, input)
begin
ns <= s0; case (ps) is 
when s0 =>
if (input = '1') then
ns <= s1;
else
ns <= s0; end if; 
when s1 =>
if (input = '1') then
ns <= s1;
else
ns <= s2; end if; 
when s2 =>
if (input = '1') then
ns <= s1;
else
ns <= s3; end if; 
when s3 =>
if (input = '1') then
ns <= s4;
else
ns <= s0; end if;
when s4 =>
if (input ='1') then
ns <= s1;
else 
ns<=s0; end if; 
when others =>
ns<= s0; end case; end process; next_state_decoder : process(ps) begin case (ps) is when s0 =>
output <= '0'; when s1 =>
output <= '0'; when s2 =>
output <= '0'; when s3 =>
output <= '0'; when s4 =>
output <= '1'; when others =>
output <= '0';
end case;
end process;
 
end Behavioral;